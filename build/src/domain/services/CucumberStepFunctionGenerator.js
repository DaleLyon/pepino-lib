"use strict";
var StringHelper_1 = require("../../domain/helpers/StringHelper");
var _ = require('underscore');
var Pepino;
(function (Pepino) {
    class NullCodeGenerationStrategy {
        generate(text) {
            return "//" + text;
        }
    }
    class CucumberStepFunctionGenerator {
        constructor(codeGenerationStrategies) {
            this._codeGenerators = codeGenerationStrategies;
        }
        generate(segmentType, criteriaSegmentText, steps) {
            return this.generateEntireFunction(segmentType, steps);
        }
        generateEntireFunction(segmentType, steps) {
            const tab = "\t";
            var stepSegmentText = _.first(steps).segment;
            var variables = StringHelper_1.StringHelper.extractTextInQuotes(stepSegmentText);
            var lines = [tab + this.generateFunctionSignature(segmentType, stepSegmentText, variables)];
            _.each(steps, (step) => {
                var gen = _.find(this._codeGenerators, (g) => { return g.canGenerate(step.text); })
                    || new NullCodeGenerationStrategy();
                var generatedCode = gen.generate(step.text);
                lines.push(tab + tab + generatedCode);
            });
            lines.push(tab + "});");
            lines.push("");
            return lines.join('\n');
        }
        generateFunctionSignature(type, stepSegmentText, variables) {
            var formattedType = StringHelper_1.StringHelper.capitalizeFirstLetter(type);
            const anyString = "\"([^\"]*)\"";
            var args = _.map(variables, (v) => {
                return v.replace("$", "");
            }).join(", ");
            var doctoredText = stepSegmentText;
            variables.forEach((v) => {
                if (v.startsWith("$")) {
                    doctoredText = doctoredText.replace("\"" + v + "\"", anyString);
                }
            });
            return "this." + formattedType + "(/^" + doctoredText + "$/, function(" + args + ") {";
        }
        ;
    }
    Pepino.CucumberStepFunctionGenerator = CucumberStepFunctionGenerator;
})(Pepino = exports.Pepino || (exports.Pepino = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbWFpbi9zZXJ2aWNlcy9DdWN1bWJlclN0ZXBGdW5jdGlvbkdlbmVyYXRvci50cyJdLCJuYW1lcyI6WyJQZXBpbm8iLCJQZXBpbm8uTnVsbENvZGVHZW5lcmF0aW9uU3RyYXRlZ3kiLCJQZXBpbm8uTnVsbENvZGVHZW5lcmF0aW9uU3RyYXRlZ3kuZ2VuZXJhdGUiLCJQZXBpbm8uQ3VjdW1iZXJTdGVwRnVuY3Rpb25HZW5lcmF0b3IiLCJQZXBpbm8uQ3VjdW1iZXJTdGVwRnVuY3Rpb25HZW5lcmF0b3IuY29uc3RydWN0b3IiLCJQZXBpbm8uQ3VjdW1iZXJTdGVwRnVuY3Rpb25HZW5lcmF0b3IuZ2VuZXJhdGUiLCJQZXBpbm8uQ3VjdW1iZXJTdGVwRnVuY3Rpb25HZW5lcmF0b3IuZ2VuZXJhdGVFbnRpcmVGdW5jdGlvbiIsIlBlcGluby5DdWN1bWJlclN0ZXBGdW5jdGlvbkdlbmVyYXRvci5nZW5lcmF0ZUZ1bmN0aW9uU2lnbmF0dXJlIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFLYiw2QkFBMkIsbUNBQW1DLENBQUMsQ0FBQTtBQUMvRCxJQUFZLENBQUMsV0FBTSxZQUFZLENBQUMsQ0FBQTtBQUVoQyxJQUFjLE1BQU0sQ0EwRG5CO0FBMURELFdBQWMsTUFBTSxFQUFDLENBQUM7SUFFbEJBO1FBQ0lDLFFBQVFBLENBQUNBLElBQVlBO1lBQ2pCQyxNQUFNQSxDQUFDQSxJQUFJQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUN2QkEsQ0FBQ0E7SUFDTEQsQ0FBQ0E7SUFFREQ7UUFJSUcsWUFBWUEsd0JBQXdEQTtZQUNoRUMsSUFBSUEsQ0FBQ0EsZUFBZUEsR0FBR0Esd0JBQXdCQSxDQUFDQTtRQUNwREEsQ0FBQ0E7UUFFREQsUUFBUUEsQ0FBQ0EsV0FBbUJBLEVBQUVBLG1CQUEyQkEsRUFBRUEsS0FBa0JBO1lBQ3pFRSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxzQkFBc0JBLENBQUNBLFdBQVdBLEVBQUVBLEtBQUtBLENBQUNBLENBQUNBO1FBQzNEQSxD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
